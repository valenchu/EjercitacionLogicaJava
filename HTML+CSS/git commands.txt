Pasos Git:
CREAR CUENTA GITHUB
CREAR REPOSITORIO EN GITHUB (anotar url)
CREAR TOKEN (copiar y tener a mano)
INSTALAR GIT en PC

$ git config --global user.name "TU_USUARIO (igual que en GitHub)"

$ git config --global user.email "TU_MAIL"

$ git config --list // para verif si quedo bien tu usuario

// Nos posicionamos en la carpeta donde sera guardado el repositorio, si no estabamos ya en ella
// Clic derecho, "Git Bash Here"

$ git init

// 'git remote add <nombre> <url>
$ git remoto agregar origen https://github.com/TU_USUARIO/NOMBRE_REPOSITORIO.git

$ git remoto -v

// cuando tengamos algun archivo nuevo en la carpeta y lo queramos subir:
// siempre dentro del Bash en la carpeta

$ git add.

$ git commit -m "TU_MENSAJE_DEL_COMMIT"

$ git log // para ver los commit y mensajes anteriores

$ git push origin main // lo subimos al servidor

// puede que nos pida el token en este paso si no lo pidio antes.

// Para traer los cambios del servidor

$ git pull origin main

NOTA: si no queremos escribir el "origin main" cada vez que hagamos un push o pull, hacer:

git config --global init.default Rama principal


y por ultimo, los comandos que estaban dando vueltas: 
GIT - COMANDOS
- VERSIÓN
git --version
versión git

Ambos comandos sirven para saber qué versión de GIT tenemos instalada
en nuestra pc. En caso de que no aparece nada, significa que no tenemos
GIT instalado.

- CONFIGURACIÓN DE DATOS
git config - nombre de usuario global "Martín Pérez"
git config --global user.email "martinperez@gmail.com"
git config --list
ls

- CONFIGURACIÓN DE RAMA EN REPOSITORIO LOCAL
git branch -M main
Sirve para modificar el nombre de la rama master por main para que no
haya conflictos con la rama main del repositorio remoto.

git config --global init.default Rama principal
Sirve para modificar la rama pricipal por default a main 
para que la proxima vez que hagamos un git init se cree la rama main y
no la master

- RAMA
CREACIÓN DE UNA RAMA:
rama de git <nombre-de-la-rama>
git branch minuevarama (EJEMPLO)

Por medio de este comando, se creará una rama de forma local.
Ahora bien, si queremos enviar nuestra rama creada al repositorio
remoto, debemos aplicar el siguiente comando:
git push <nombre-remoto> <nombre-de-la-rama>
git push origen minuevarama (EJEMPLO)

EXISTENTE LISTAR LAS RAMAS:
rama de git
git branch --list
git branch -a

ELIMINAR UNA RAMA:
git branch -d <nombre-de-la-rama>
git branch -d minuevarama

git merge <nombre-de-rama>
origen de git push --delete <nombre-de-rama>
git branch -d nombre-rama

git fetch - 1º paso
desarrollo de git checkout - 2ª paso
git branch nueva-rama - 3ª paso
cambio en el archivo
git push origin nueva-rama

git remote add origin https: //TOKEN@github.com/USUARIO-QUE-CREO-EL-REPOSITORIO/NOMBRE-DEL-PROYECTO.git -> Sirve para agregar un repositorio remoto como "origin" con nuestro token de acceso público y poder realizar nuestros empujes autenticándonos
git remote set-url origin https: //TOKEN@github.com/USUARIO-QUE-CREO-EL-REPOSITORIO/NOMBRE-DEL-PROYECTO.git -> Sirve para cambiar el link del repositorio remoto "origin" si es que ya lo habíamos creado